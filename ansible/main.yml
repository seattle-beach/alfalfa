- hosts: all
  # No-op task to set ansible_env (see https://github.com/ansible/ansible/issues/14655)

- hosts: all

  vars:
    repos:
      - alfalfa
      - bash-it
      - pivotal_ide_prefs
      - vim-config

  environment:
    PATH: /usr/local/bin:{{ ansible_env.PATH }}

  roles:
    - zsh

  tasks:
    - name: Ensure that the .ssh directory exists
      file: path=~/.ssh state=directory

    - name: Ensure that the known_hosts file exists
      file: path=~/.ssh/known_hosts state=touch

    # NOTE: This (sort of) loses unpushed commits. See https://github.com/ansible/ansible-modules-core/issues/614 for details,
    # but if this happens to you, use `git reflog` to retrieve them.
    - name: Update Alfalfa and child repos
      git:
        repo: https://github.com/seattle-beach/{{ item }}.git
        dest: ~/workspace/{{ item }}
      ignore_errors: yes # Ignore dirty repos
      with_items: "{{ repos }}"

    # - name: Set SSH push remotes for repos
    #   command: git remote set-url --push origin git@github.com:seattle-beach/{{ item }}.git
    #   args:
    #     chdir: ~/workspace/{{ item }}
    #   with_items: "{{ repos }}"

    - name: Set upstreams for repos
      shell: git remote show upstream || git remote add upstream https://github.com/{{ item.value }}/{{ item.key }}.git
      args:
        chdir: ~/workspace/{{ item.key }}
      ignore_errors: yes
      with_dict:
        "bash-it": Bash-it
        pivotal_ide_prefs: pivotal
        "vim-config": pivotal

    - import_tasks: sudo.yml
    - name: Install Homebrew
      shell: /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" < /dev/null
      args:
        creates: /usr/local/bin/brew

    - name: Symlink config files
      file:
        src: "~/workspace/alfalfa/dotfiles/{{ item }}"
        dest: "~/{{ item }}"
        state: link
      loop:
        - .bash_profile
        - .bundle
        - .gemrc
        - .git-authors
        - .git-together
        - .git_templates
        - .gitconfig
        - .gitignore_global
        - .spacemacs
        - .tmux.conf
        - .zshrc
      ignore_errors: yes

    - name: Symlink .pairs
      file: src=~/.git-authors dest=~/.pairs state=link

    - name: Symlink Seattle Wiki bookmark file
      file: src="~/workspace/alfalfa/dotfiles/Seattle Wiki.url" dest="~/Desktop/Seattle Wiki.url" state=link

    - name: Symlink child repositories
      file: src=~/workspace/{{ item.key }} dest={{ item.value }} state=link
      with_dict:
        bash-it: ~/.bash_it
        vim-config: ~/.vim
        vim-config/vimrc: ~/.vimrc

    - name: Add alias enabled directory for bash-it
      file: path=~/.bash_it/aliases/enabled state=directory

    - name: Add some enabled aliases for bash-it
      file:
        src="~/.bash_it/aliases/available/{{ item }}"
        dest="~/.bash_it/aliases/enabled/{{ item }}"
        state=link
      with_items:
        - "git.aliases.bash"
        - "general.aliases.bash"
        - "fuck.aliases.bash"
        - "osx.aliases.bash"

    - name: Add completion enabled directory for bash-it
      file: path=~/.bash_it/completion/enabled state=directory

    - name: Add some enabled completion for bash-it
      file:
        src="~/.bash_it/completion/available/{{ item }}"
        dest="~/.bash_it/completion/enabled/{{ item }}"
        state=link
      with_items:
        - "git.completion.bash"

    - name: Add alias plugins directory for bash-it
      file: path=~/.bash_it/plugins/enabled state=directory

    - name: Add some enabled plugins for bash-it
      file:
        src="~/.bash_it/plugins/available/{{ item }}"
        dest="~/.bash_it/plugins/enabled/{{ item }}"
        state=link
      with_items:
        - "history.plugin.bash"

    - name: Install Spacemacs
      git:
        repo: https://github.com/syl20bnr/spacemacs
        dest: ~/.emacs.d

    - file:
        path: ~/.vim/autoload
        state: directory
    - name: Download vim-plug
      get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: ~/.vim/autoload/plug.vim
    - name: Install vim plugins
      command: vim -c PlugInstall -c quitall

    - name: Tap Homebrew Bundle
      homebrew_tap: tap=Homebrew/bundle

    - import_tasks: sudo.yml
    - file:
        path: /usr/local/Caskroom
        state: directory
        owner: "{{ ansible_user_id }}"
        group: staff
      become: yes
    - name: Install from the Brewfile
      command: brew bundle
      args:
        chdir: ~/workspace/alfalfa
      ignore_errors: yes

    - name: Install Bundler for the default Ruby
      command: gem install --user-install bundler

    - name: Make vim use MacVim
      file: src=/Applications/MacVim.app/Contents/bin/mvim dest=/usr/local/bin/vim state=link

    - name: Create LaunchAgents dir
      file: path=~/Library/LaunchAgents state=directory

    - name: Update OS X defaults
      osx_defaults:
        domain: "{{ item.domain | default(omit) }}"
        key: "{{ item.key }}"
        type: "{{ item.type }}"
        value: "{{ item.value }}"
      with_items:
        - # Put the Dock on the left
          domain: com.apple.dock
          key: orientation
          type: string
          value: left
        - # keyboard repeat rate
          key: KeyRepeat
          type: int
          value: 1
        - # delay before keyboard repeat
          key: InitialKeyRepeat
          type: int
          value: 15
        - # Function keys are F keys
          domain: com.apple.keyboard
          key: fnState
          type: bool
          value: true
        - # Show date with time in menu bar
          domain: com.apple.menuextra.clock
          key: DateFormat
          type: string
          value: EEE MMM d  h:mm a
        - # show scissors for flycut icon
          domain: com.generalarcade.flycut
          key: menuIcon
          type: int
          value: 3
        - # don't use natural scrolling
          domain: NSGlobalDomain
          key: com.apple.swipescrolldirection
          type: bool
          value: false

    - name: Check if Terminal profile has been imported
      command: defaults read com.apple.Terminal "Window Settings"
      register: terminal_window_settings
    - name: Import Terminal profile
      command: open ~/workspace/alfalfa/dotfiles/Pivotal.terminal
      when: terminal_window_settings.stdout.find('Pivotal') == -1
    - name: Set terminal profile to be the default
      osx_defaults:
        domain: com.apple.Terminal
        key: "{{ item }} Window Settings"
        type: string
        value: Pivotal
      with_items:
        - Default
        - Startup

    - name: Install dockutil
      homebrew: name=dockutil
    - name: Remove all icons from the Dock
      command: dockutil --remove all
    - name: Add /Applications/ to the Dock
      command: dockutil --add /Applications/ --sort name
    - name: Restart the Dock
      command: killall Dock
      ignore_errors: yes

    - name: Set login items
      command: ~/workspace/alfalfa/bin/addLoginItem /Applications/{{ item }}.app
      become: yes
      become_user: "{{ ansible_env.USER }}"
      with_items:
        - Flycut
        - ShiftIt

    - name: Start OS X apps
      shell: pgrep "{{ item.key }}" || open -a "{{ item.value }}"
      with_dict:
        ShiftIt: ShiftIt.app
        Flycut: Flycut.app

- import_playbook: ssh.yml
